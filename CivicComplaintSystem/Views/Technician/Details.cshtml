@model CivicFix.Models.Complaint
@{
    ViewData["Title"] = "Complaint Details - Technician";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Complaint #@Model.ComplaintId</h2>
    <div>
        <a href="/Technician/Dashboard" class="btn btn-outline-primary">Back to Dashboard</a>
        <a href="/Account/Logout" class="btn btn-outline-danger">Logout</a>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card mb-4">
            <div class="card-header">
                <h5>Complaint Information</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <p><strong>Problem Type:</strong> @Model.ProblemType</p>
                        <p><strong>Description:</strong> @Model.Description</p>
                        <p><strong>Location:</strong> @Model.Address</p>
                        <p><strong>Coordinates:</strong> @Model.Latitude, @Model.Longitude</p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Reported By:</strong> @Model.User?.Name</p>
                        <p><strong>Created:</strong> @Model.CreatedAt.ToLocalTime().ToString("g")</p>
                        <p><strong>Last Updated:</strong> @Model.UpdatedAt?.ToLocalTime().ToString("g")</p>
                        <p><strong>Department:</strong> @Model.Department?.Name</p>
                    </div>
                </div>
                
                @if (!string.IsNullOrEmpty(Model.PhotoPath))
                {
                    <div class="mt-3">
                        <strong>Original Photo:</strong><br>
                        <img src="@Model.PhotoPath" class="img-fluid rounded" style="max-width: 300px;" alt="Complaint Photo">
                    </div>
                }
            </div>
        </div>

        @if (Model.Status == ComplaintStatus.Pending)
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Upload Work Photos</h5>
                </div>
                <div class="card-body">
                    <form id="photoUploadForm" enctype="multipart/form-data">
                        <input type="hidden" id="complaintId" value="@Model.ComplaintId" />
                        
                        <div class="mb-3">
                            <label class="form-label">Work in Progress Photo</label>
                            <input type="file" class="form-control" id="workInProgressPhoto" accept="image/*" required>
                            <small class="text-muted">Upload a photo showing workers working on the issue</small>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Fixed Issue Photo</label>
                            <input type="file" class="form-control" id="fixedPhoto" accept="image/*" required>
                            <small class="text-muted">Upload a photo showing the completed/fixed issue</small>
                        </div>
                        
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-upload me-2"></i>Upload Photos & Start Work
                        </button>
                    </form>
                </div>
            </div>
        }

        @if (Model.Status == ComplaintStatus.InProgress)
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Upload Work Photos</h5>
                </div>
                <div class="card-body">
                    <form id="photoUploadForm" enctype="multipart/form-data">
                        <input type="hidden" id="complaintId" value="@Model.ComplaintId" />
                        
                        <div class="mb-3">
                            <label class="form-label">Work in Progress Photo</label>
                            <input type="file" class="form-control" id="workInProgressPhoto" accept="image/*" required>
                            <small class="text-muted">Upload a photo showing workers working on the issue</small>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Fixed Issue Photo</label>
                            <input type="file" class="form-control" id="fixedPhoto" accept="image/*" required>
                            <small class="text-muted">Upload a photo showing the completed/fixed issue</small>
                        </div>
                        
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-upload me-2"></i>Upload Photos
                        </button>
                    </form>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5>Complete Work</h5>
                </div>
                <div class="card-body">
                    <p class="text-info">
                        <i class="fas fa-info-circle me-2"></i>
                        Upload both photos above before marking the work as complete.
                    </p>
                    <button class="btn btn-success" id="markFixedBtn" onclick="markAsFixed(@Model.ComplaintId)" disabled>
                        <i class="fas fa-check me-2"></i>Mark as Fixed
                    </button>
                    <small class="text-muted d-block mt-2">Both photos must be uploaded to enable this button</small>
                </div>
            </div>
        }

        @if (Model.Status == ComplaintStatus.Fixed)
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Work Completed</h5>
                </div>
                <div class="card-body">
                    <p class="text-success">
                        <i class="fas fa-check-circle me-2"></i>
                        This complaint has been marked as fixed. Waiting for admin review.
                    </p>
                </div>
            </div>
        }
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6>Status</h6>
            </div>
            <div class="card-body">
                <span class="badge status-badge @(Model.Status.ToString().ToLower()) fs-6">@Model.Status</span>
            </div>
        </div>

        @if (Model.TechnicianPhotos.Any())
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h6>Uploaded Photos</h6>
                </div>
                <div class="card-body">
                    @foreach (var photo in Model.TechnicianPhotos.OrderBy(p => p.PhotoType))
                    {
                        <div class="mb-3">
                            <strong>@photo.PhotoType:</strong><br>
                            <img src="@photo.PhotoPath" class="img-fluid rounded" style="max-width: 100%;" alt="@photo.PhotoType Photo">
                            <small class="text-muted d-block">Uploaded: @photo.UploadedAt.ToLocalTime().ToString("g")</small>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
<script>
    $(document).ready(function() {
        $('#photoUploadForm').submit(function(e) {
            e.preventDefault();
            uploadPhotos();
        });
        
        // Check if photos are uploaded and enable/disable Mark as Fixed button
        checkPhotosUploaded();
    });

    function uploadPhotos() {
        const complaintId = $('#complaintId').val();
        const workPhoto = $('#workInProgressPhoto')[0].files[0];
        const fixedPhoto = $('#fixedPhoto')[0].files[0];

        if (!workPhoto || !fixedPhoto) {
            alert('Please select both photos.');
            return;
        }

        const formData = new FormData();
        formData.append('complaintId', complaintId);
        formData.append('workInProgressPhoto', workPhoto);
        formData.append('fixedPhoto', fixedPhoto);

        $.ajax({
            url: '/Technician/UploadPhotos',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function(response) {
                if (response.success) {
                    alert(response.message);
                    location.reload();
                } else {
                    alert('Error: ' + response.message);
                }
            },
            error: function() {
                alert('Error uploading photos. Please try again.');
            }
        });
    }

    function checkPhotosUploaded() {
        // Check if both photos are already uploaded
        const hasWorkPhoto = @(Model.TechnicianPhotos.Any(p => p.PhotoType == "WorkInProgress") ? "true" : "false");
        const hasFixedPhoto = @(Model.TechnicianPhotos.Any(p => p.PhotoType == "Fixed") ? "true" : "false");
        
        if (hasWorkPhoto && hasFixedPhoto) {
            $('#markFixedBtn').prop('disabled', false);
            $('#markFixedBtn').text('âœ“ Mark as Fixed');
        } else {
            $('#markFixedBtn').prop('disabled', true);
            $('#markFixedBtn').text('Mark as Fixed (Upload both photos first)');
        }
    }

    function markAsFixed(complaintId) {
        if (confirm('Are you sure you want to mark this complaint as fixed?')) {
            $.post('/Technician/MarkAsFixed', { complaintId: complaintId })
                .done(function(response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                })
                .fail(function() {
                    alert('Error marking as fixed. Please try again.');
                });
        }
    }
</script>

<style>
.status-badge {
    font-size: 0.8em;
}

.status-badge.pending {
    background-color: #ffc107;
    color: #000;
}

.status-badge.inprogress {
    background-color: #17a2b8;
    color: #fff;
}

.status-badge.fixed {
    background-color: #28a745;
    color: #fff;
}
</style>
}
