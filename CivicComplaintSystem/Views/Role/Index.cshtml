@model IEnumerable<CivicFix.Models.User>
@{
    ViewData["Title"] = "User Role Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>User Role Management</h2>
    <div>
        <a href="/Admin" class="btn btn-outline-primary">Back to Admin</a>
    </div>
</div>

<!-- Role Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-4">
        <div class="card text-bg-primary">
            <div class="card-body text-center">
                <h5 class="card-title">@ViewBag.TotalUsers</h5>
                <p class="card-text small">Total Users</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-bg-info">
            <div class="card-body text-center">
                <h5 class="card-title">@ViewBag.TechnicianCount</h5>
                <p class="card-text small">Technicians</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-bg-secondary">
            <div class="card-body text-center">
                <h5 class="card-title">@ViewBag.RegularUserCount</h5>
                <p class="card-text small">Regular Users</p>
            </div>
        </div>
    </div>
</div>

<!-- Filter Panel -->
<div class="card mb-4">
    <div class="card-header">
        <h6>Filters & Search</h6>
    </div>
    <div class="card-body">
        <form method="get" action="/Role" class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Role</label>
                <select class="form-select" name="role">
                    <option value="">All Roles</option>
                    @foreach (var role in ViewBag.Roles)
                    {
                        <option value="@role" selected="@(ViewBag.Role == role)">@role</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Department</label>
                <select class="form-select" name="departmentId">
                    <option value="">All Departments</option>
                    @foreach (var dept in ViewBag.Departments)
                    {
                        <option value="@dept.DepartmentId" selected="@(ViewBag.DepartmentId == dept.DepartmentId)">@dept.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Search</label>
                <input type="text" class="form-control" name="q" value="@ViewBag.Q" placeholder="Search users...">
            </div>
            <div class="col-md-3">
                <label class="form-label">Sort By</label>
                <select class="form-select" name="sortBy">
                    <option value="Name" selected="@(ViewBag.SortBy == "Name")">Name</option>
                    <option value="Email" selected="@(ViewBag.SortBy == "Email")">Email</option>
                    <option value="Role" selected="@(ViewBag.SortBy == "Role")">Role</option>
                    <option value="Points" selected="@(ViewBag.SortBy == "Points")">Points</option>
                    <option value="Department" selected="@(ViewBag.SortBy == "Department")">Department</option>
                </select>
            </div>
            <div class="col-12">
                <button type="submit" class="btn btn-primary">Apply Filters</button>
                <a href="/Role" class="btn btn-outline-secondary">Reset</a>
            </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped" id="usersTable">
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" id="selectAll" onchange="toggleAllCheckboxes()">
                        </th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Current Role</th>
                        <th>Department</th>
                        <th>Points</th>
                        <th>Badge Level</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr data-user-id="@user.UserId">
                            <td>
                                <input type="checkbox" class="user-checkbox" value="@user.UserId" onchange="updateSelectAllState()">
                            </td>
                            <td>@user.Name</td>
                            <td>@user.Email</td>
                            <td>
                                <span class="badge role-badge @(user.Role.ToLower())">@user.Role</span>
                            </td>
                            <td>@user.Department?.Name</td>
                            <td>@user.Points</td>
                            <td>@user.BadgeLevel</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button class="btn btn-sm btn-outline-primary" onclick="editRole(@user.UserId, '@user.Role', @(user.DepartmentId?.ToString() ?? "null"))">
                                        Edit Role
                                    </button>
                                    @if (user.Role != "Technician")
                                    {
                                        <button class="btn btn-sm btn-outline-danger" onclick="deleteUser(@user.UserId, '@user.Name')">
                                            Delete
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Edit Role Modal -->
<div class="modal fade" id="editRoleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit User Role</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editRoleForm">
                    <input type="hidden" id="editUserId" />
                    <div class="mb-3">
                        <label class="form-label">User</label>
                        <input type="text" class="form-control" id="editUserName" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Role</label>
                        <select class="form-select" id="editRole" required>
                            <option value="User">User</option>
                            <option value="Technician">Technician</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Department</label>
                        <select class="form-select" id="editDepartment">
                            <option value="">No Department</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveRole()">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Bulk Update Modal -->
<div class="modal fade" id="bulkUpdateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Bulk Update Roles</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="bulkUpdateForm">
                    <div class="mb-3">
                        <label class="form-label">Selected Users: <span id="selectedCount">0</span></label>
                        <div id="selectedUsersList" class="border p-2 rounded" style="max-height: 150px; overflow-y: auto;">
                            <!-- Selected users will be listed here -->
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">New Role</label>
                        <select class="form-select" id="bulkRole" required>
                            <option value="User">User</option>
                            <option value="Technician">Technician</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Department</label>
                        <select class="form-select" id="bulkDepartment">
                            <option value="">No Department</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveBulkUpdate()">Update Selected Users</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete user <strong id="deleteUserName"></strong>?</p>
                <p class="text-danger small">This action cannot be undone and will remove all associated data.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDelete()">Delete User</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    let departments = [];
    let selectedUsers = [];
    let userToDelete = null;

    $(document).ready(function() {
        loadDepartments();
    });

    function loadDepartments() {
        $.get('/Role/GetDepartments')
            .done(function(data) {
                departments = data;
                populateDepartmentSelect('#editDepartment');
                populateDepartmentSelect('#bulkDepartment');
            });
    }

    function populateDepartmentSelect(selector) {
        const select = $(selector);
        select.empty();
        select.append('<option value="">No Department</option>');
        departments.forEach(dept => {
            select.append(`<option value="${dept.departmentId}">${dept.name}</option>`);
        });
    }

    function editRole(userId, currentRole, currentDepartmentId) {
        const userRow = $(`tr[data-user-id="${userId}"]`);
        const userName = userRow.find('td:nth-child(2)').text();
        
        $('#editUserId').val(userId);
        $('#editUserName').val(userName);
        $('#editRole').val(currentRole);
        $('#editDepartment').val(currentDepartmentId || '');
        
        $('#editRoleModal').modal('show');
    }

    function saveRole() {
        const userId = $('#editUserId').val();
        const role = $('#editRole').val();
        const departmentId = $('#editDepartment').val() || null;

        $.post('/Role/UpdateRole', {
            userId: userId,
            role: role,
            departmentId: departmentId
        }).done(function(response) {
            if (response.success) {
                location.reload();
            } else {
                alert('Error: ' + response.message);
            }
        });
    }

    function toggleAllCheckboxes() {
        const selectAll = $('#selectAll').is(':checked');
        $('.user-checkbox').prop('checked', selectAll);
        updateSelectedUsers();
    }

    function updateSelectAllState() {
        const totalCheckboxes = $('.user-checkbox').length;
        const checkedCheckboxes = $('.user-checkbox:checked').length;
        
        $('#selectAll').prop('checked', totalCheckboxes === checkedCheckboxes);
        updateSelectedUsers();
    }

    function updateSelectedUsers() {
        selectedUsers = [];
        $('.user-checkbox:checked').each(function() {
            const userId = $(this).val();
            const userRow = $(this).closest('tr');
            const userName = userRow.find('td:nth-child(2)').text();
            const userEmail = userRow.find('td:nth-child(3)').text();
            selectedUsers.push({ id: userId, name: userName, email: userEmail });
        });
        
        $('#selectedCount').text(selectedUsers.length);
        updateSelectedUsersList();
    }

    function updateSelectedUsersList() {
        const list = $('#selectedUsersList');
        list.empty();
        
        if (selectedUsers.length === 0) {
            list.html('<p class="text-muted mb-0">No users selected</p>');
        } else {
            selectedUsers.forEach(user => {
                list.append(`<div class="d-flex justify-content-between align-items-center mb-1">
                    <span>${user.name} (${user.email})</span>
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeUser(${user.id})">×</button>
                </div>`);
            });
        }
    }

    function removeUser(userId) {
        $(`.user-checkbox[value="${userId}"]`).prop('checked', false);
        updateSelectAllState();
    }

    function showBulkUpdateModal() {
        if (selectedUsers.length === 0) {
            alert('Please select at least one user to update.');
            return;
        }
        $('#bulkUpdateModal').modal('show');
    }

    function saveBulkUpdate() {
        if (selectedUsers.length === 0) {
            alert('Please select at least one user to update.');
            return;
        }

        const role = $('#bulkRole').val();
        const departmentId = $('#bulkDepartment').val() || null;
        const userIds = selectedUsers.map(user => parseInt(user.id));

        $.post('/Role/BulkUpdateRoles', {
            userIds: userIds,
            role: role,
            departmentId: departmentId
        }).done(function(response) {
            if (response.success) {
                alert(response.message);
                location.reload();
            } else {
                alert('Error: ' + response.message);
            }
        });
    }

    function deleteUser(userId, userName) {
        userToDelete = userId;
        $('#deleteUserName').text(userName);
        $('#deleteModal').modal('show');
    }

    function confirmDelete() {
        if (!userToDelete) return;

        $.post('/Role/DeleteUser', {
            userId: userToDelete
        }).done(function(response) {
            if (response.success) {
                alert(response.message);
                location.reload();
            } else {
                alert('Error: ' + response.message);
            }
        });
    }
</script>

<style>
.role-badge {
    font-size: 0.8em;
}

.role-badge.user {
    background-color: #6c757d;
}

.role-badge.technician {
    background-color: #17a2b8;
}
</style>
}
